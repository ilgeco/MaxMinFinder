var searchIndex = JSON.parse('{\
"max":{"doc":"<strong>Provide an easy way to find the maximum number from </strong>…","t":[3,11,11,11,11,11,11,12,5,11,11,11,11,11,11,5,0,5,5,5,11,11,11,11,11,3,11,11,11,11,12,11,11,11,11,5,11,11,11],"n":["Args","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","file","find_max_double","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","main","parser","retrive_clip","retrive_file","retrive_stdin","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","FloatIter","borrow","borrow_mut","fmt","from","input","into","into_iter","new","next","parse","try_from","try_into","type_id"],"q":["max","","","","","","","","","","","","","","","","","","","","","","","","","max::parser","","","","","","","","","","","","",""],"d":["Provide an easy way to find the minimum number from …","","","","","","","File name","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","Retrive the content from the ClipBoard","Retrive the content of a file in a particular Path","Retrive a String from stdin","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,5,5,5,5,5,5,5,0,5,5,5,5,5,5,0,0,0,0,0,5,5,5,5,5,0,17,17,17,17,17,17,17,17,17,0,17,17,17],"f":[0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],0,[2,[[4,[3]]]],[[5,6],7],[[]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[[],[[4,[11]]]],[[]],[[]],0,[[],12],[[[14,[13]]],12],[[],[[15,[12]]]],[[],10],[[],10],[[],16],[[5,8],[[10,[9]]]],[[5,8],[[10,[9]]]],0,[[]],[[]],[[17,6],7],[[]],0,[[]],[[]],[2,17],[17,4],[2,[[18,[2,3]]]],[[],10],[[],10],[[],16]],"p":[[3,"Command"],[15,"str"],[15,"f64"],[4,"Option"],[3,"Args"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[3,"String"],[3,"Path"],[8,"AsRef"],[6,"Result"],[3,"TypeId"],[3,"FloatIter"],[6,"IResult"]]},\
"min":{"doc":"<strong>Provide an easy way to find the minimum number from </strong>…","t":[3,11,11,11,11,11,11,12,5,11,11,11,11,11,11,5,0,5,5,5,11,11,11,11,11,3,11,11,11,11,12,11,11,11,11,5,11,11,11],"n":["Args","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","file","find_min_double","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","main","parser","retrive_clip","retrive_file","retrive_stdin","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","FloatIter","borrow","borrow_mut","fmt","from","input","into","into_iter","new","next","parse","try_from","try_into","type_id"],"q":["min","","","","","","","","","","","","","","","","","","","","","","","","","min::parser","","","","","","","","","","","","",""],"d":["Provide an easy way to find the minimum number from …","","","","","","","File name","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","Retrive the content from the ClipBoard","Retrive the content of a file in a particular Path","Retrive a String from stdin","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,5,5,5,5,5,5,5,0,5,5,5,5,5,5,0,0,0,0,0,5,5,5,5,5,0,17,17,17,17,17,17,17,17,17,0,17,17,17],"f":[0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],0,[2,[[4,[3]]]],[[5,6],7],[[]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[[],[[4,[11]]]],[[]],[[]],0,[[],12],[[[14,[13]]],12],[[],[[15,[12]]]],[[],10],[[],10],[[],16],[[5,8],[[10,[9]]]],[[5,8],[[10,[9]]]],0,[[]],[[]],[[17,6],7],[[]],0,[[]],[[]],[2,17],[17,4],[2,[[18,[2,3]]]],[[],10],[[],10],[[],16]],"p":[[3,"Command"],[15,"str"],[15,"f64"],[4,"Option"],[3,"Args"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[3,"String"],[3,"Path"],[8,"AsRef"],[6,"Result"],[3,"TypeId"],[3,"FloatIter"],[6,"IResult"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
